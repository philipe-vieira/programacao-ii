/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

import TrabalhoFinal.Aluno;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 * Classe da Tela para o cadastro de alunos
 * @author Philipe
 */
public class CadastroAluno extends javax.swing.JDialog {
    // ArratList para armazenar os cadastros
    private ArrayList<Aluno> aluno = new ArrayList<Aluno>();
    private boolean insereTerceiro = false;
    
    /**
     * Criar uma nova tela CadastroAluno
     * Construtor da classe
     * @param parent java.awt.Frame - Objeto da janela pai
     * @param modal boolean - boleano para identificar se a janela será um modal 
     */
    public CadastroAluno(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    /**
     * Criar uma nova tela CadastroAluno
     * Construtor da classe
     * @param parent  java.awt.Frame - Objeto da janela pai
     * @param modal boolean - boleano para identificar se a janela será um modal 
     * @param aluno ArrayList - Lista de alunos
     */
    public CadastroAluno(java.awt.Frame parent, boolean modal, ArrayList<Aluno> aluno) {
        super(parent, modal);
        initComponents();
        this.aluno = aluno;
    }
    /**
     * Criar uma nova tela CadastroAluno
     * Construtor da classe
     * @param parent java.awt.Frame - Objeto da janela pai
     * @param modal boolean - boleano para identificar se a janela será um modal 
     * @param aluno ArrayList - Lista de alunos
     * @param terceiro boolean - booleano para verificação se o aluno será inserido na 3 posicao
     */
    public CadastroAluno(java.awt.Frame parent, boolean modal, ArrayList<Aluno> aluno, boolean terceiro) {
        super(parent, modal);
        initComponents();
        this.aluno = aluno;
        this.insereTerceiro = terceiro;
    }

    /**
     * Método para obter os dados da lista de alunos
     * @return ArrayList - Lista de Alunos cadastrados
     */
    public ArrayList<Aluno> getAluno() {
        return aluno;
    }
    
    /**
    * Método para alterar a lista de alunos
    * @param aluno ArrayList - valor a ser atribuido à lista de alunos
    */
    public void setAluno(ArrayList<Aluno> aluno) {
        this.aluno = aluno;
    }
    
    /**
     * Método para identificar se a matricula existe para algum aluno já cadastrado
     * @param lista - lista de alunos já cadastrados anteriormente
     * @param matricula - matricula buscada no array de alunos
     * @return boolean - booleano verdadeiro ou falso 
     * para indicar ocorrencia da matricula do aluno no array
     */
    public boolean buscaAluno(ArrayList<Aluno> lista, int matricula){
        // Percorrendo a lista dos alunos, 
        // se encontrar uma aluno com a matricula buscada returna true;
        for(Aluno i: lista){
            if(i.getMatricula()==matricula)
                return true;
        }
        
        return false;
    }
    
    /**
     * Método para inserir um novo aluno na terceira posicao da lista
     * @param aluno - Objeto Aluno a ser inserido na lista
     */
    public void insereTerceiro(Aluno aluno){
        this.aluno.add(2, aluno);
        // Mostra um pop-up com o nome do aluno cadastrado
        JOptionPane.showMessageDialog(null, 
                this.aluno.get(this.aluno.lastIndexOf(aluno)).getNome()
                +" foi cadastrado na Terceira posicao!"
        );
        this.dispose();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMatricula = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        lblCpf = new javax.swing.JLabel();
        lblDataNasc = new javax.swing.JLabel();
        lblIdade = new javax.swing.JLabel();
        lblTelefone = new javax.swing.JLabel();
        jTextNome = new javax.swing.JTextField();
        btnCadastro = new javax.swing.JButton();
        jTextCpf = new javax.swing.JFormattedTextField();
        jTextTelefone = new javax.swing.JFormattedTextField();
        jTextDataNasc = new javax.swing.JFormattedTextField();
        jTextIdade = new javax.swing.JFormattedTextField();
        jTextMatricula = new javax.swing.JFormattedTextField();
        btnVoltar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lblMenu = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de aluno(a)");
        setPreferredSize(new java.awt.Dimension(1020, 530));
        setSize(new java.awt.Dimension(1020, 530));

        lblMatricula.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblMatricula.setForeground(new java.awt.Color(11, 111, 181));
        lblMatricula.setText("Matrícula:");

        lblNome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNome.setForeground(new java.awt.Color(11, 111, 181));
        lblNome.setText("Nome:");

        lblCpf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCpf.setForeground(new java.awt.Color(11, 111, 181));
        lblCpf.setText("CPF:");

        lblDataNasc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDataNasc.setForeground(new java.awt.Color(11, 111, 181));
        lblDataNasc.setText("Data de Nascimento:");

        lblIdade.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblIdade.setForeground(new java.awt.Color(11, 111, 181));
        lblIdade.setText("Idade:");

        lblTelefone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTelefone.setForeground(new java.awt.Color(11, 111, 181));
        lblTelefone.setText("Telefone:");

        jTextNome.setForeground(new java.awt.Color(224, 30, 33));

        btnCadastro.setBackground(new java.awt.Color(11, 111, 181));
        btnCadastro.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnCadastro.setForeground(new java.awt.Color(255, 255, 255));
        btnCadastro.setText("Cadastrar Aluno");
        btnCadastro.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastroActionPerformed(evt);
            }
        });

        jTextCpf.setForeground(new java.awt.Color(224, 30, 33));
        try {
            jTextCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTextCpf.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jTextTelefone.setForeground(new java.awt.Color(224, 30, 33));
        try {
            jTextTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) # ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jTextDataNasc.setForeground(new java.awt.Color(224, 30, 33));
        try {
            jTextDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTextDataNasc.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextIdade.setForeground(new java.awt.Color(224, 30, 33));
        try {
            jTextIdade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTextIdade.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextMatricula.setForeground(new java.awt.Color(224, 30, 33));
        try {
            jTextMatricula.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTextMatricula.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnVoltar.setBackground(new java.awt.Color(11, 111, 181));
        btnVoltar.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        btnVoltar.setForeground(new java.awt.Color(255, 255, 255));
        btnVoltar.setText("Voltar ao menu principal");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Consolas", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(11, 111, 181));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("_____________________________________________________________________________________________________________________________________________________");

        lblMenu.setFont(new java.awt.Font("Malgun Gothic", 1, 60)); // NOI18N
        lblMenu.setForeground(new java.awt.Color(224, 30, 33));
        lblMenu.setText("Cadastre");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(11, 111, 181));
        jLabel1.setText("™");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(224, 30, 33));
        jLabel2.setText("Por favor, informe os dados solicidados para efetuar o cadastro.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblMenu)
                .addGap(0, 0, 0)
                .addComponent(jLabel1))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(520, 520, 520)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addComponent(lblMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(lblNome, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addComponent(jTextMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jTextNome, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addComponent(lblIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(lblDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lblCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120)
                .addComponent(lblTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addComponent(jTextIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jTextDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jTextCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jTextTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(400, 400, 400)
                .addComponent(btnCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(410, 410, 410)
                .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addComponent(jLabel3)
                .addGap(6, 6, 6)
                .addComponent(jLabel2)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNome, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextNome, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(btnCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método para ação do botão CADASTRAR, 
     * e para toda a logica do cadastro de alunos
     * @param evt - Evento de click no botão
     */
    private void btnCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastroActionPerformed
        // TODO add your handling code here:
        Aluno aluno = new Aluno();
        int matricula = Integer.parseInt(jTextMatricula.getText());
        
        // Verifica se a matricula já foi cadastrada
        // Se sim, mostra um pop-up e encerra a função
        if(buscaAluno(this.aluno, matricula)){
            JOptionPane.showMessageDialog(null, "Matricula já cadastrada.");
            return;
        }
        
        // Atribuir valores dos campos às variaveis
        // Obs.: função Integer.parseInt() converte em inteiro
        aluno.setMatricula(matricula);
        aluno.setNome(jTextNome.getText());
        aluno.setCpf(jTextCpf.getText());
        aluno.setDataNascimento(jTextDataNasc.getText());
        aluno.setTelefone(jTextTelefone.getText());
        aluno.setIdade(Integer.parseInt(jTextIdade.getText()));
        
        if(insereTerceiro){
            insereTerceiro(aluno);
            return;
        }
        
        // Adiciona o cadastro no ArraList de alunos
        this.aluno.add(aluno);
        
        // Mostra um pop-up com o nome do aluno cadastrado
        JOptionPane.showMessageDialog(null, 
                this.aluno.get(this.aluno.lastIndexOf(aluno)).getNome()
                +" foi cadastrado!"
        );
        
        // chamando o metodo limparCampos
        limparCampos();
    }//GEN-LAST:event_btnCadastroActionPerformed

    /**
     * Método para ação do botão de VOLTAR,
     * este irá fechar a tela e continuar o script do sistema.
     * @param evt - Evento de click no botão
     */
    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CadastroAluno dialog = new CadastroAluno(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastro;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JFormattedTextField jTextCpf;
    private javax.swing.JFormattedTextField jTextDataNasc;
    private javax.swing.JFormattedTextField jTextIdade;
    private javax.swing.JFormattedTextField jTextMatricula;
    private javax.swing.JTextField jTextNome;
    private javax.swing.JFormattedTextField jTextTelefone;
    private javax.swing.JLabel lblCpf;
    private javax.swing.JLabel lblDataNasc;
    private javax.swing.JLabel lblIdade;
    private javax.swing.JLabel lblMatricula;
    private javax.swing.JLabel lblMenu;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblTelefone;
    // End of variables declaration//GEN-END:variables

    private void limparCampos() { //método limpar campo
    
        // limpará os campos de textos para efetuar novos cadastros
        jTextCpf.setText("");
        jTextDataNasc.setText("");
        jTextIdade.setText("");
        jTextMatricula.setText("");
        jTextNome.setText("");
        jTextTelefone.setText("");
        //após limpar o texto, o curso de digitação será colocado na caixa de texto matrícula
        jTextMatricula.requestFocus();
        
    }
    
    
    
}
